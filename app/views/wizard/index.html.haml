- if current_user!=nil
  %h3
    Information is power!
- else
  %h3
    Try out the Carbon calculator by providing some data anonymously!

#tabs
  %ul#tabList.nav.nav-tabs


%div{:float => "left"}
  #question
  %input#answer.textBox{:type => "number", :hidden => "true"}
  .authform
    #skip.button{:float => "left"}
      Skip
    #next.button
      Next

:javascript
  $(document).ready(function() 
  {
    $('#question').text('Click next to begin answering questions and filling out a basic profile, or choose a tab above to fill out specific information.').addClass('header1');
    initTabs();
  })
  var variables =
    #{
      @factors.to_json
    };
  var categories =
    #{
      @categories.to_json
    }
  var counter = -1;
  var questions = [];
  var data = {form_fields:[],
              year:#{@date.year},
              month:#{@date.month}};

  var getQuestionsForCategory = function(category_id)
  {
    var questions = [];
    for(var x in variables)
      if(variables[x].category_id == category_id && variables[x].variableName)
        questions.push(variables[x]);
    return questions;
  }

  var addClick = function(value, target)
  {
    target.click(function()
    {
        questions = getQuestionsForCategory(value);
        counter = -1;
        displayNextQuestion();
    });
  }

  var initTabs = function()
  {
    for(i in categories)
    {
      var category = categories[i];
      var wrapper = $("<li class='button'>");
      var tab = $("<a>");
      tab.attr("href", "#"+category.name);
      tab.attr("data-toggle", "tab");
      tab.text(category.name);
      addClick(category.id, tab);
      wrapper.append(tab);
      $("#tabList").append(wrapper);
    }
    for(x in variables)
    {
      var variable = variables[x];
      if(variable.dependency == 2 && variable.variableName)
        questions.push(variable);
    }
  }

  var displayNextQuestion = function()
  {
    var next;

    if(counter < questions.length - 1)
    {
      next = questions[++counter].variableName;
      $('#question').text(next);
      $('#answer').val('');
      $('#answer').show();
      $('#skip').show();
      $('#next').show();
    }
    else
    {
      $('#question').text("There are no more questions to ask!");
      $('#skip').hide();
      $('#next').hide();
      $('#answer').hide();
    }
  }

  var submitQuestion = function(value)
  {
    if(!value || counter == -1)
      return $('#answer').attr('hidden');

    var factor = variables[counter];
   
    data.form_fields.push({statistic_id:variables[counter].statistic_id, name:variables[counter].name, factor_id:variables[counter].id, value:value});

    if(!questions[counter + 1] || questions[counter + 1].statistic_id != factor.statistic_id)
    {
      $.ajax({
        type: "POST",
        url: "/create_answer_from_input",
        data: data,
        datatype:"html",
        success: function(data){},
        async: true
      });

      data = {"form_fields":[],
              "year":#{@date.year},
              "month":#{@date.month}};
    }

    return true;
  }

  $('#next').click(function()
  {
    if(submitQuestion($('#answer').val()))
      displayNextQuestion();
  });


  $('#skip').click(function()
  {
    submitQuestion(1);
    displayNextQuestion();
  });
  
