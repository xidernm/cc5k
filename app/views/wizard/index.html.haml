- if current_user!=nil
  %h3
    = @mission.name 
- else
  %h3
    Try out the Carbon calculator by providing some data anonymously!

#tabs
  %ul#tabList.nav.nav-tabs

%div{:float => "left"}
  #question
  %input#answer.textBox{:type => "number", :hidden => "true"}
  %div
    %select#month
    %select#year
  .authform
    %div{:style => "display: inline-block; align: left; min-width: 57px;"}
      #back.button
        Back
    %div{:style => "display: inline-block; align: left; min-width: 53px;"}
      #skip.button
        Skip
    %div{:style => "display: inline-block; align: left; min-width: 55px;"}
      #next.button
        Start

- if @chart != nil
  = high_chart("monthDist",@chart)

%div
  = @mission.description

%div
  %small{:onClick=>"methodPopup()"}
    %a How are these numbers used?
    
:javascript
  $('#skip').hide();
  $('#back').hide();

  $(document).ready(function() 
  {
    $('#question').text('Click next to begin answering questions and filling out a basic profile, or choose a tab above to fill out specific information.').addClass('header1');
    initTabs();
    addOptions($('#month'), months, time.month, updateMonth);
    addOptions($('#year'), years, time.year, updateYear);
    $('#year').show();
    $('#month').show();
    
  })

  var months = [['January',1],['February',2],['March',3],['April',4],['May',5],['June',6],['July',7],['August',8],['September',9],['October',10],['November',11],['December',12]];
  var years = [[2004,2004],[2005,2005],[2006,2006],[2007,2007],[2008,2008],[2009,2009],[2010,2010],[2011,2011],[2012,2012],[2013,2013],[2012,2012],[2013,2013],[2014,2014]];

  var time = {
    month:#{@date.month},
    year:#{@date.year}
  };
  var variables =
    #{
      @factors.to_json
    };
  var categories =
    #{
      @categories.to_json
    }
  var counter = -1;
  var questions = [];
  var data = {form_fields:[],
              year:time.year,
              month:time.month};

  var updateMonth = function()
  {
    data.month = time.month = $('#month').val();
  }

  var updateYear = function()
  {
    data.year = time.year = $('#year').val();
  }

  var updateFactor = function(id)
  {
    $.post("/answeredFactor", {id:id, month:data.month, year:data.year},
          function(result){
            if(result != null)
              $('#answer').val(result.amount)});
  }

  var addOptions = function(target, options, select, onupdate)
  {
    for(var item in options)
    {
      var option = "<option";
      if(options[item][1] == select)
        option += ' selected="selected"';
      option += ' value="'+options[item][1]+'">';
      option += options[item][0];
      option += '</option>';
      target.append(option);
    }
    target.change(onupdate);
  }

  var getQuestionsForCategory = function(category_id)
  {
    var questions = [];
    for(var x in variables)
      if(variables[x].category_id == category_id && variables[x].variableName && variables[x].dependency == 2)
        questions.push(variables[x]);
    return questions;
  }

  var addClick = function(value, target)
  {
    target.click(function()
    {
        questions = getQuestionsForCategory(value);
        counter = -1;
        displayNextQuestion();
    });
  }

  var updateChart = function()
  {
    $.post("/month_chart", {year:data.year, month:data.month}, function(data){console.debug(data);
      console.log(#{@chart});
    })
  }

  var initTabs = function()
  {
    for(i in categories)
    {
      var category = categories[i];
      var wrapper = $("<li class='button'>");
      var tab = $("<a>");
      tab.attr("href", "#"+category.name);
      tab.attr("data-toggle", "tab");
      tab.text(category.name);
      addClick(category.id, tab);
      wrapper.append(tab);
      $("#tabList").append(wrapper);
    }
    for(x in variables)
    {
      var variable = variables[x];
      if(variable.dependency == 2 && variable.variableName)
        questions.push(variable);
    }
  }

  var displayNewQuestion = function(delta)
  {
    var next;

    if(counter + delta < questions.length && counter + delta >= 0)
    {
      counter += delta;
      next = questions[counter].variableName;
      $('#question').text(next);
      $('#answer').val('');
      $('#year').hide();
      $('#month').hide();
      $('#answer').show();
      $('#skip').show();
      $('#next').show();
      $('#next').text("Next");
      updateFactor(questions[counter].id);
    }
    else
    {
      $('#question').text("Data received.");
      $('#skip').hide();
      $('#next').hide();
      $('#answer').hide();
      updateChart();
    }

    if(counter > 0)
      $('#back').show();
    else
      $('#back').hide();
  }

  var displayNextQuestion = function()
  {
    displayNewQuestion(1);
  }
  var displayPrevQuestion = function()
  {
    displayNewQuestion(-1);
  }

  var submitQuestion = function(value)
  {
    if(!value || counter == -1)
      return $('#answer').attr('hidden');

    var factor = questions[counter];
   
    data.form_fields.push({statistic_id:factor.statistic_id, name:factor.name, factor_id:factor.id, value:value});

    if(counter == questions.length - 1 || questions[counter + 1].statistic_id != factor.statistic_id)
    {
      console.debug("To Server");
      console.debug(data);
      $.ajax({
        type: "POST",
        url: "/create_answer_from_input",
        data: data,
        datatype:"html",
        success: function(data){},
        async: true
      });

      data = {"form_fields":[],
              "year": time.year,
              "month":time.month
        };
    }

    return true;
  }

  $('#next').click(function()
  {
    if(submitQuestion($('#answer').val()))
      displayNextQuestion();
  });

  $('#back').click(function()
  {
    console.debug('back');
    displayPrevQuestion();
  });


  $('#skip').click(function()
  {
    submitQuestion(1);
    displayNextQuestion();
  });
  
